openapi: 3.0.0
info:
  title: EduPulse
  description: API for EduPulse
  termsOfService: http://swagger.io/terms/
  contact:
    name: EduPulse Support
    email: support@edupulse.com
  version: 2.0.0
paths:
  /user/{userId}:
    get:
      tags:
      - user
      summary: Get a user
      description: US-8 Notification
      operationId: getUser
      parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Successful, User details"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: User
  /posts:
    get:
      tags:
      - posts
      summary: Find posts
      description: FR-5 Any user must be able to search a post by category or name
      operationId: findPosts
      parameters:
      - name: title
        in: query
        description: the title of the post I am searching
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: category
        in: query
        description: The category of the posts I am searching
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Shows relative posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
                x-content-type: application/json
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Posts
    post:
      tags:
      - posts
      summary: Upload a post
      description: FR-3 The admin must be able to upload a post
      operationId: uploadPost
      requestBody:
        description: Post to be uploaded
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPost'
        required: true
      responses:
        "200":
          description: Post response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Posts
  /posts/{postId}:
    get:
      tags:
      - posts
      summary: Returns a Post based on the postId
      description: US-8 Notification
      operationId: showPost
      parameters:
      - name: postId
        in: path
        description: ID of the post
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Successful, Post details"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Posts
  /user/{userId}/posts:
    get:
      tags:
      - posts
      summary: Returns all the Posts of a user
      description: US-3 Edit Post
      operationId: showUserPosts
      parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Successful, Post details"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
                x-content-type: application/json
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Posts
  /user/{userId}/posts/{postId}:
    put:
      tags:
      - posts
      summary: Edit a post
      description: "FR-10 The admin must be able to edit his posts, FR-7 The admin\
        \ must be able to assign his post to a category"
      operationId: editPost
      parameters:
      - name: userId
        in: path
        description: ID of the postAuthor
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: postId
        in: path
        description: ID of the post to edit
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPost'
        required: true
      responses:
        "200":
          description: Post edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Posts
    delete:
      tags:
      - posts
      summary: Delete a post
      description: US-3 Edit Post
      operationId: deletePost
      parameters:
      - name: userId
        in: path
        description: ID of the postAuthor
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: postId
        in: path
        description: ID of the post to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Post deleted successfully
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Posts
  /posts/{postId}/comment:
    post:
      tags:
      - comment
      summary: Comment on a post
      description: FR-6 A logged in user must be able to comment on a post
      operationId: commentPost
      parameters:
      - name: postId
        in: path
        description: ID of the post to comment on
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewComment'
        required: true
      responses:
        "200":
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Comment
  /posts/{postId}/comment/{commentId}:
    delete:
      tags:
      - comment
      summary: Delete a post's comment
      description: US-6 Comment
      operationId: deletePostComment
      parameters:
      - name: postId
        in: path
        description: ID of the post
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: commentId
        in: path
        description: ID of the comment to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Comment deleted successfully
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Comment
  /playlist:
    post:
      tags:
      - playlist
      summary: Create a playlist
      description: FR-4 A logged in user must be able to create a playlist
      operationId: createPlaylist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlaylist'
        required: true
      responses:
        "200":
          description: Playlist created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Playlist
  /user/{userId}/playlist:
    get:
      tags:
      - playlist
      summary: Returns all the Playlists of a user
      description: US-11 Edit Playlist
      operationId: showUserPlaylists
      parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: "Successful, Playlist details"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Playlist'
                x-content-type: application/json
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Playlist
  /user/{userId}/playlist/{playlistId}:
    put:
      tags:
      - playlist
      summary: Edit a playlist
      description: FR-12 A logged in user must be able to edit his playlist
      operationId: editPlaylist
      parameters:
      - name: userId
        in: path
        description: ID of the playlistAuthor
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: playlistId
        in: path
        description: ID of the playlist to edit
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPlaylist'
        required: true
      responses:
        "200":
          description: Post edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playlist'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Playlist
    delete:
      tags:
      - playlist
      summary: Delete a playlist
      description: US-11 Edit Playlist
      operationId: deletePlaylist
      parameters:
      - name: userId
        in: path
        description: ID of the playlistAuthor
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: playlistId
        in: path
        description: ID of the playlist to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Playlist deleted successfully
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-swagger-router-controller: Playlist
components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        username:
          type: string
        isLoggedIn:
          type: boolean
        isAdmin:
          type: boolean
      example:
        isLoggedIn: true
        isAdmin: true
        userId: 0
        username: username
    NewPost:
      type: object
      properties:
        file:
          type: string
          format: binary
        postAuthorId:
          type: integer
        details:
          $ref: '#/components/schemas/NewPost_details'
    Post:
      allOf:
      - $ref: '#/components/schemas/NewPost'
      - required:
        - postId
        type: object
        properties:
          postId:
            type: integer
            format: int64
    NewComment:
      type: object
      properties:
        content:
          type: string
        authorId:
          type: integer
    Comment:
      allOf:
      - $ref: '#/components/schemas/NewComment'
      - required:
        - commentId
        type: object
        properties:
          commentId:
            type: integer
            format: int64
          postId:
            type: integer
    NewPlaylist:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/NewPlaylist_details'
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        playlistAuthorId:
          type: integer
    Playlist:
      allOf:
      - $ref: '#/components/schemas/NewPlaylist'
      - required:
        - playlistId
        type: object
        properties:
          playlistId:
            type: integer
            format: int64
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    NewPost_details:
      type: object
      properties:
        form:
          type: string
        title:
          type: string
        category:
          type: string
        description:
          type: string
        visibility:
          type: string
        commentsection:
          type: boolean
        picture:
          type: string
          format: binary
    NewPlaylist_details:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        category:
          type: string
        visibility:
          type: string
